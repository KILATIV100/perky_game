import logging
import time
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes
from telegram.constants import ParseMode
from telegram.error import RetryAfter

# –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é —Ç–∞ –±–∞–∑—É –¥–∞–Ω–∏—Ö
from config import BOT_TOKEN, WEBAPP_URL
from database import db

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥–µ—Ä–∞
logger = logging.getLogger(__name__)

# --- –î–ê–ù–Ü –ú–ê–ì–ê–ó–ò–ù–£ –¢–ê –ö–û–ù–¢–ê–ö–¢–ò ---
CONTACT_PHONE = "+380 (95) 394 19 00" # <--- –û–ù–û–í–õ–ï–ù–û
CAFE_MENU_URL = "https://menu.ps.me/ZK6-i-cBzeg" # <--- –û–ù–û–í–õ–ï–ù–û

COFFEE_ITEMS = [ # <--- –û–ù–û–í–õ–ï–ù–û
    {
        "id": "coffee_1", 
        "name": "ZAVARI Santos Blend (100% –∞—Ä–∞–±—ñ–∫–∞)", 
        "price": "340 –≥—Ä–Ω (200 –≥) / 1450 –≥—Ä–Ω (1 –∫–≥)", 
        "desc": "–ö–∞–≤–∞, —â–æ –ø—ñ–¥–∫–æ—Ä—é—î –∑ –ø–µ—Ä—à–æ–≥–æ –∫–æ–≤—Ç–∫–∞! üåü **–ú‚Äô—è–∫–∞ –±—Ä–∞–∑–∏–ª—å—Å—å–∫–∞ –∞—Ä–∞–±—ñ–∫–∞** –∑ –≥–æ—Ä—ñ—Ö–æ–≤–∏–º —Å–æ–ª–æ–¥–∫–∏–º –∞—Ä–æ–º–∞—Ç–æ–º. –ü—ñ—Å–ª—è—Å–º–∞–∫ —á–æ—Ä–Ω–æ–≥–æ —à–æ–∫–æ–ª–∞–¥—É —Ç–∞ —Ñ—Ä—É–∫—Ç–æ–≤—ñ –Ω–æ—Ç–∫–∏. –Ü–¥–µ–∞–ª—å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç –¥–ª—è –ø—ñ–¥–∑–∞—Ä—è–¥–∂–µ–Ω–Ω—è.\n\n*–û–±—Å–º–∞–∂–µ–Ω–Ω—è: –°–µ—Ä–µ–¥–Ω—î | –ö–∏—Å–ª–æ—Ç–Ω—ñ—Å—Ç—å: –ù–∏–∑—å–∫–∞ | –¢—ñ–ª–æ: –ù–∞—Å–∏—á–µ–Ω–µ*"
    },
    {
        "id": "coffee_2", 
        "name": "Brazil Alfenas Dulce (100% –∞—Ä–∞–±—ñ–∫–∞)", 
        "price": "340 –≥—Ä–Ω (200 –≥)", 
        "desc": "–ù–µ–π–º–æ–≤—ñ—Ä–Ω–∞ –º'—è–∫—ñ—Å—Ç—å —Ç–∞ –±–∞–≥–∞—Ç—Å—Ç–≤–æ —Å–º–∞–∫—É. –°–æ–ª–æ–¥–∫—É–≤–∞—Ç–∏–π –∞—Ä–æ–º–∞—Ç **–º–æ–ª–æ—á–Ω–æ–≥–æ —à–æ–∫–æ–ª–∞–¥—É —Ç–∞ –ø—ñ–¥—Å–º–∞–∂–µ–Ω–æ–≥–æ —Ñ—É–Ω–¥—É–∫–∞** üå∞üç´. –ù—ñ–∂–Ω–∞ —Å–æ–ª–æ–¥–∫—ñ—Å—Ç—å –∫–∞—Ä–∞–º–µ–ª—ñ –∑ –Ω–æ—Ç–∫–∞–º–∏ –∫–∞–∫–∞–æ. –ö–∞–≤–∞ –¥–ª—è —Å–ø—Ä–∞–≤–∂–Ω—ñ—Ö –≥—É—Ä–º–∞–Ω—ñ–≤."
    },
    {
        "id": "coffee_3", 
        "name": "ETHIOPIA YIRGACHEFFE GRADE 1 (100% –∞—Ä–∞–±—ñ–∫–∞)", 
        "price": "380 –≥—Ä–Ω (200 –≥)", 
        "desc": "–î–ª—è –ª—é–±–∏—Ç–µ–ª—ñ–≤ –Ω—ñ–∂–Ω–æ—ó –∫–∞–≤–∏ –∑ **—Ñ—Ä—É–∫—Ç–æ–≤–∏–º–∏ –∞–∫—Ü–µ–Ω—Ç–∞–º–∏**. –Ø—Å–∫—Ä–∞–≤–∏–π –∞—Ä–æ–º–∞—Ç –∂–∞—Å–º–∏–Ω—É —Ç–∞ –º–µ–¥–æ–≤–æ—ó –¥–∏–Ω—ñ. –õ–µ–≥–∫–∏–π —Å–º–∞–∫ –∑ –Ω–æ—Ç–∞–º–∏ —Ü–∏—Ç—Ä—É—Å—É, —á–æ—Ä–Ω–∏—Ü—å, –ø–æ–ª—É–Ω–∏—Ü—å üçìüçã, —Ç–∞ –ø—ñ—Å–ª—è—Å–º–∞–∫–æ–º –≤–∏—à–Ω—ñ —ñ –∫–∞—Ä–∞–º–µ–ª—ñ."
    },
    {
        "id": "coffee_4", 
        "name": "Italy Blend (100% –∞—Ä–∞–±—ñ–∫–∞)", 
        "price": "340 –≥—Ä–Ω (200 –≥) / 1450 –≥—Ä–Ω (1 –∫–≥)", 
        "desc": "–ö–ª–∞—Å–∏—á–Ω–∏–π —ñ—Ç–∞–ª—ñ–π—Å—å–∫–∏–π –±–ª–µ–Ω–¥. –ê—Ä–æ–º–∞—Ç –æ–±—Å–º–∞–∂–µ–Ω–æ–≥–æ –∑–µ—Ä–Ω–∞, –∫–∞—Ä–∞–º–µ–ª—ñ —Ç–∞ –≥–æ—Ä—ñ—Ö—ñ–≤. –ì–∞—Ä–º–æ–Ω—ñ–π–Ω–∏–π –±–∞–ª–∞–Ω—Å –≥—ñ—Ä–∫–æ—Ç–∏ —ñ —Å–æ–ª–æ–¥–∫–æ—Å—Ç—ñ –∑ –ª–µ–≥–∫–∏–º–∏ –Ω–æ—Ç–∞–º–∏ **—à–æ–∫–æ–ª–∞–¥—É —Ç–∞ —Ü–∏—Ç—Ä—É—Å–æ–≤–æ—ó —Å–≤—ñ–∂–æ—Å—Ç—ñ** üç´üçä. –Ü–¥–µ–∞–ª—å–Ω–∞ –¥–ª—è –±—É–¥—å-—è–∫–æ–≥–æ —á–∞—Å—É –¥–æ–±–∏."
    },
    {
        "id": "coffee_5", 
        "name": "GOURMETTO (80% –∞—Ä–∞–±—ñ–∫–∞ / 20% —Ä–æ–±—É—Å—Ç–∞)", 
        "price": "300 –≥—Ä–Ω (200 –≥)", 
        "desc": "–ö–∞–≤–∞, —è–∫–∞ –¥–∞—Ä—É—î —Å–ø—Ä–∞–≤–∂–Ω—ñ–π —Å–º–∞–∫–æ–≤–∏–π –µ–∫—Å–ø—ñ—Ä—ñ—î–Ω—Å. –ì–∞—Ä–º–æ–Ω—ñ–π–Ω–µ –ø–æ—î–¥–Ω–∞–Ω–Ω—è **—à–æ–∫–æ–ª–∞–¥—É, –∫–∞—Ä–∞–º–µ–ª—ñ —Ç–∞ —Å—É—Ö–æ—Ñ—Ä—É–∫—Ç—ñ–≤** –∑ –ª–µ–≥–∫–æ—é –ø—ñ–∫–∞–Ω—Ç–Ω–æ—é –≥—ñ—Ä—á–∏–Ω–∫–æ—é. –ì–ª–∏–±–æ–∫–∏–π, —Ç—Ä–∏–≤–∞–ª–∏–π –ø—ñ—Å–ª—è—Å–º–∞–∫ —ñ –¥–µ–ª—ñ–∫–∞—Ç–Ω–∞ –∫–∏—Å–ª–∏–Ω–∫–∞. üçáüç¨"
    },
]

MERCH_ITEMS = [ # <--- –û–ù–û–í–õ–ï–ù–û
    {
        "id": "merch_1", 
        "name": "–ï–∫–æ —á–∞—à–∫–∞ –∑ –±–∞–º–±—É–∫–∞ 'PerkUP'", 
        "price": "200 –≥—Ä–Ω", 
        "desc": "–°—Ç–∏–ª—å–Ω–∞ –±–∞–≥–∞—Ç–æ—Ä–∞–∑–æ–≤–∞ –µ–∫–æ-—á–∞—à–∫–∞ –∑ –±–∞–º–±—É–∫–æ–≤–æ–≥–æ –≤–æ–ª–æ–∫–Ω–∞. –ó–º–µ–Ω—à—É–π—Ç–µ –≤—ñ–¥—Ö–æ–¥–∏ —Ç–∞ –Ω–∞—Å–æ–ª–æ–¥–∂—É–π—Ç–µ—Å—å –∫–∞–≤–æ—é –Ω–∞ —Ö–æ–¥—É! –û–±'—î–º: 350 –º–ª."
    },
    {
        "id": "merch_2", 
        "name": "–§—É—Ç–±–æ–ª–∫–∞ 'Coffee Jumper'", 
        "price": "350 –≥—Ä–Ω", 
        "desc": "–ë–∞–≤–æ–≤–Ω—è–Ω–∞ —Ñ—É—Ç–±–æ–ª–∫–∞ –≤–∏—Å–æ–∫–æ—ó —è–∫–æ—Å—Ç—ñ –∑ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–º –ø—Ä–∏–Ω—Ç–æ–º **Perky Robot**! –Ü–¥–µ–∞–ª—å–Ω–æ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å –¥–ª—è —Ñ–∞–Ω–∞—Ç—ñ–≤ –≥—Ä–∏ —Ç–∞ –ø–æ—Ü—ñ–Ω–æ–≤—É–≤–∞—á—ñ–≤ –∫–æ–º—Ñ–æ—Ä—Ç—É."
    },
    {
        "id": "merch_3", 
        "name": "–•—É–¥—ñ 'Coffee Jumper'", 
        "price": "1000 –≥—Ä–Ω", 
        "desc": "–¢–µ–ø–ª–µ —Ç–∞ –∑–∞—Ç–∏—à–Ω–µ —Ö—É–¥—ñ –∑ –∫–∞–ø—é—à–æ–Ω–æ–º. –°—Ç–∏–ª—å–Ω–∏–π –º—ñ–Ω—ñ–º–∞–ª—ñ—Å—Ç–∏—á–Ω–∏–π –¥–∏–∑–∞–π–Ω —ñ–∑ –ª–æ–≥–æ—Ç–∏–ø–æ–º –≥—Ä–∏. –Ü–¥–µ–∞–ª—å–Ω–æ –¥–ª—è —Ö–æ–ª–æ–¥–Ω–∏—Ö –¥–Ω—ñ–≤ –∑ –≥–∞—Ä—è—á–æ—é –∫–∞–≤–æ—é."
    },
    {
        "id": "merch_4", 
        "name": "–ü–æ–¥–∞—Ä—É–Ω–∫–æ–≤–∏–π –Ω–∞–±—ñ—Ä 'PerkUP'", 
        "price": "2000 –≥—Ä–Ω", 
        "desc": "–Ü–¥–µ–∞–ª—å–Ω–∏–π –ø–æ–¥–∞—Ä—É–Ω–æ–∫ –¥–ª—è –∫–∞–≤–æ–º–∞–Ω–∞! –í–∫–ª—é—á–∞—î: 200 –≥ –∫–∞–≤–∏ –Ω–∞ –≤–∏–±—ñ—Ä, –±—Ä–µ–Ω–¥–æ–≤–∞–Ω—É –µ–∫–æ-—á–∞—à–∫—É —Ç–∞ –º—ñ–Ω—ñ-–ø–∞–∫—É–≤–∞–Ω–Ω—è –∫—Ä–∞—Ñ—Ç–æ–≤–æ–≥–æ —à–æ–∫–æ–ª–∞–¥—É. **–°–ø—Ä–∞–≤–∂–Ω—î —Å–≤—è—Ç–æ —Å–º–∞–∫—É**!"
    },
]

class PerkyCoffeeBot:
    """
    –ö–ª–∞—Å, —â–æ —ñ–Ω–∫–∞–ø—Å—É–ª—é—î –≤—Å—é –ª–æ–≥—ñ–∫—É Telegram-–±–æ—Ç–∞.
    """
    def __init__(self):
        self.application = None
        self.webhook_url = f"{WEBAPP_URL}/{BOT_TOKEN}"

    async def start(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /start."""
        user = update.effective_user
        db.save_or_update_user(user.id, user.username, user.first_name) # <--- –í–ò–ü–†–ê–í–õ–ï–ù–û
        
        welcome_message = (
            f"–ü—Ä–∏–≤—ñ—Ç, {user.first_name}! üëã\n\n"
            "–Ø - <b>Perky Coffee Jump Bot</b>! ü§ñ‚òï\n\n"
            "–ì–æ—Ç–æ–≤–∏–π –¥–æ –≥—Ä–∏? –ü—Ä–æ—Å—Ç–æ –Ω–∞—Ç–∏—Å–Ω–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ! üëá"
        )
        
        keyboard = [ # <--- –û–ù–û–í–õ–ï–ù–û
            [InlineKeyboardButton("üéÆ –ü–æ—á–∞—Ç–∏ –≥—Ä—É", web_app=WebAppInfo(url=f"{WEBAPP_URL}/game"))],
            [
                InlineKeyboardButton("‚òï –ú–µ–Ω—é –∫–∞–≤'—è—Ä–Ω—ñ", url=CAFE_MENU_URL),
            ],
            [
                InlineKeyboardButton("üõí –ú–∞–≥–∞–∑–∏–Ω", callback_data='shop'),
                InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data='stats'),
            ],
            [
                InlineKeyboardButton("üèÜ –†–µ–π—Ç–∏–Ω–≥", callback_data='leaderboard'),
                InlineKeyboardButton("‚ùì –ü—Ä–∞–≤–∏–ª–∞", callback_data='help')
            ]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await update.message.reply_html(welcome_message, reply_markup=reply_markup)

    async def button_callback(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω—å –Ω–∞ –∫–Ω–æ–ø–∫–∏."""
        query = update.callback_query
        await query.answer()

        action = query.data
        
        if action == 'stats':
            await self.show_stats(query)
        elif action == 'leaderboard':
            await self.show_leaderboard(query)
        elif action == 'shop':
            await self.show_shop(query)
        elif action == 'help':
            await self.show_help(query)
        elif action == 'back_main':
            await self.back_to_main(query)
        # –û–ù–û–í–õ–ï–ù–ê –õ–û–ì–Ü–ö–ê –î–õ–Ø –ö–ê–¢–ï–ì–û–†–Ü–ô –ú–ê–ì–ê–ó–ò–ù–£ - –Ø–í–ù–ê –ü–ï–†–ï–í–Ü–†–ö–ê
        elif action == 'shop_cat_coffee':
            await self.show_shop_category(query, 'coffee')
        elif action == 'shop_cat_merch':
            await self.show_shop_category(query, 'merch')
        elif action.startswith('shop_item_'):
            item_id = action.split('_', 2)[-1]
            await self.show_shop_item(query, item_id)

    async def show_stats(self, query: Update):
        """–ü–æ–∫–∞–∑—É—î —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞."""
        user_id = query.from_user.id
        stats = db.get_user_stats(user_id)
        
        if not stats or stats['games_played'] == 0:
            stats_text = "üìä <b>–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n\n–í–∏ —â–µ –Ω–µ –∑—ñ–≥—Ä–∞–ª–∏ –∂–æ–¥–Ω–æ—ó –≥—Ä–∏. –ß–∞—Å –ø–æ—á–∞—Ç–∏!"
        else:
            stats_text = (
                f"üìä <b>–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n\n"
                f"üèÜ <b>–†–µ–∫–æ—Ä–¥ –≤–∏—Å–æ—Ç–∏:</b> {stats['max_height']} –º\n"
                f"‚òï <b>–í—Å—å–æ–≥–æ –∑–µ—Ä–µ–Ω:</b> {stats['total_beans']}\n"
                f"üïπÔ∏è <b>–ó—ñ–≥—Ä–∞–Ω–æ —ñ–≥–æ—Ä:</b> {stats['games_played']}"
            )

        keyboard = [[InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data='back_main')]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.edit_message_text(stats_text, parse_mode=ParseMode.HTML, reply_markup=reply_markup)

    async def show_leaderboard(self, query: Update):
        """–ü–æ–∫–∞–∑—É—î —Ç–∞–±–ª–∏—Ü—é –ª—ñ–¥–µ—Ä—ñ–≤."""
        leaderboard = db.get_leaderboard()
        
        if not leaderboard:
            leaderboard_text = "üèÜ <b>–¢–∞–±–ª–∏—Ü—è –ª—ñ–¥–µ—Ä—ñ–≤:</b>\n\n–ü–æ–∫–∏ —â–æ –ø–æ—Ä–æ–∂–Ω—å–æ. –°—Ç–∞–Ω—å—Ç–µ –ø–µ—Ä—à–∏–º!"
        else:
            leaderboard_text = "üèÜ <b>–¢–æ–ø-10 –≥—Ä–∞–≤—Ü—ñ–≤:</b>\n\n"
            emojis = ["ü•á", "ü•à", "ü•â"]
            for i, user in enumerate(leaderboard):
                name = user.get('username') or user.get('first_name') or "–ì—Ä–∞–≤–µ—Ü—å"
                max_height = user.get('max_height', 0)
                emoji = emojis[i] if i < 3 else f"<b>{i+1}.</b>"
                leaderboard_text += f"{emoji} {name} - {max_height} –º\n"

        keyboard = [[InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data='back_main')]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.edit_message_text(leaderboard_text, parse_mode=ParseMode.HTML, reply_markup=reply_markup)
        
    async def show_shop(self, query: Update):
        """–ü–æ–∫–∞–∑—É—î –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –º–∞–≥–∞–∑–∏–Ω—É."""
        shop_text = "üõí <b>–ú–∞–≥–∞–∑–∏–Ω Perky Coffee:</b>\n\n–û–±–µ—Ä—ñ—Ç—å, —â–æ –±–∞–∂–∞—î—Ç–µ –ø—Ä–∏–¥–±–∞—Ç–∏:"
        
        keyboard = [
            [
                InlineKeyboardButton("‚òï –ö–∞–≤–∞ –≤ –∑–µ—Ä–Ω–∞—Ö", callback_data='shop_cat_coffee'),
                InlineKeyboardButton("üëï –ú–µ—Ä—á —Ç–∞ –∞–∫—Å–µ—Å—É–∞—Ä–∏", callback_data='shop_cat_merch')
            ],
            [InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data='back_main')]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.edit_message_text(shop_text, parse_mode=ParseMode.HTML, reply_markup=reply_markup)

    async def show_shop_category(self, query: Update, category: str):
        """–ü–æ–∫–∞–∑—É—î —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä—ñ–≤ —É –≤–∏–±—Ä–∞–Ω—ñ–π –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó."""
        items = COFFEE_ITEMS if category == 'coffee' else MERCH_ITEMS
        title = "‚òï –ö–∞–≤–∞ –≤ –∑–µ—Ä–Ω–∞—Ö" if category == 'coffee' else "üëï –ú–µ—Ä—á —Ç–∞ –∞–∫—Å–µ—Å—É–∞—Ä–∏"
        
        shop_text = f"<b>{title}:</b>\n\n–û–±–µ—Ä—ñ—Ç—å –ø–æ–∑–∏—Ü—ñ—é –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ–ø–∏—Å—É:"
        
        keyboard = []
        for item in items:
            keyboard.append([InlineKeyboardButton(f"{item['name']} ({item['price']})", callback_data=f"shop_item_{item['id']}")])
            
        keyboard.append([InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥ –¥–æ –º–∞–≥–∞–∑–∏–Ω—É", callback_data='shop')])
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await query.edit_message_text(shop_text, parse_mode=ParseMode.HTML, reply_markup=reply_markup)
        
    async def show_shop_item(self, query: Update, item_id: str):
        """–ü–æ–∫–∞–∑—É—î –¥–µ—Ç–∞–ª—å–Ω–∏–π –æ–ø–∏—Å —Ç–æ–≤–∞—Ä—É."""
        item = next((i for i in COFFEE_ITEMS + MERCH_ITEMS if i['id'] == item_id), None)
        
        if not item:
            await query.edit_message_text("–ü–æ–∑–∏—Ü—ñ—é –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.", reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥ –¥–æ –º–∞–≥–∞–∑–∏–Ω—É", callback_data='shop')]]))
            return

        item_category = 'coffee' if item in COFFEE_ITEMS else 'merch'
        
        item_text = (
            f"<b>{item['name']}</b>\n\n"
            f"üí∞ <b>–¶—ñ–Ω–∞:</b> {item['price']}\n\n"
            f"üìù <b>–û–ø–∏—Å:</b> {item['desc']}\n\n"
            f"üìû –î–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è, –±—É–¥—å –ª–∞—Å–∫–∞, –∑–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É–π—Ç–µ: <b>{CONTACT_PHONE}</b>"
        )
        
        keyboard = [[InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥ –¥–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó", callback_data=f"shop_cat_{item_category}")]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await query.edit_message_text(item_text, parse_mode=ParseMode.HTML, reply_markup=reply_markup)


    async def show_help(self, query: Update):
        """–ü–æ–∫–∞–∑—É—î –æ–ø–∏—Å –≥—Ä–∏ —Ç–∞ –ø—Ä–∞–≤–∏–ª–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–æ–Ω—É—Å—ñ–≤."""
        help_text = ( # <--- –û–ù–û–í–õ–ï–ù–û
            "‚ùì <b>–ü—Ä–∞–≤–∏–ª–∞ —Ç–∞ –ë–æ–Ω—É—Å–∏:</b>\n\n"
            "–ö–µ—Ä—É–π—Ç–µ –∫–∞–≤–æ–≤–∏–º —Ä–æ–±–æ—Ç–æ–º, —Å—Ç—Ä–∏–±–∞–π—Ç–µ –ø–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö —ñ –∑–±–∏—Ä–∞–π—Ç–µ –∫–∞–≤–æ–≤—ñ –∑–µ—Ä–Ω–∞ (‚òï) –Ω–∞ —à–ª—è—Ö—É –¥–æ –Ω–∞–π–≤–∏—â–æ–≥–æ —Ä–µ–∫–æ—Ä–¥—É.\n\n"
            "<b>üéØ –û—Å–Ω–æ–≤–Ω—ñ –ø—Ä–∞–≤–∏–ª–∞:</b>\n"
            "1. –°—Ç—Ä–∏–±–∞–π—Ç–µ —è–∫–æ–º–æ–≥–∞ –≤–∏—â–µ, —É–Ω–∏–∫–∞—é—á–∏ –ø–∞–¥—ñ–Ω–Ω—è —Ç–∞ –≤–æ—Ä–æ–≥—ñ–≤.\n"
            "2. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –≥—ñ—Ä–æ—Å–∫–æ–ø –∞–±–æ –µ–∫—Ä–∞–Ω–Ω—ñ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–µ—Ä—É–≤–∞–Ω–Ω—è.\n"
            "3. –°–∫–ª–∞–¥–Ω—ñ—Å—Ç—å –∑—Ä–æ—Å—Ç–∞—î –ø—ñ—Å–ª—è 200–º —ñ 500–º.\n\n"
            "üéÅ <b>–Ø–∫ –≤–∏–≥—Ä–∞—Ç–∏ –±–æ–Ω—É—Å–∏:</b>\n"
            "–ó–Ω–∏–∂–∫–∏ —Ç–∞ –ø—Ä–∏–∑–∏ –≤–∏–¥–∞—é—Ç—å—Å—è –∑–∞ –∑–∞–≥–∞–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∑—ñ–±—Ä–∞–Ω–∏—Ö –∫–∞–≤–æ–≤–∏—Ö –∑–µ—Ä–µ–Ω (‚òï) —É –≥—Ä—ñ:\n"
            "‚Äî –ó–Ω–∏–∂–∫–∞ 2%: –≤—ñ–¥ 100 –∑–µ—Ä–µ–Ω\n"
            "‚Äî –ó–Ω–∏–∂–∫–∞ 5%: –≤—ñ–¥ 200 –∑–µ—Ä–µ–Ω\n"
            "‚Äî –ë—Ä–µ–Ω–¥–æ–≤–∞–Ω–∞ —á–∞—à–∫–∞: –≤—ñ–¥ 5000 –∑–µ—Ä–µ–Ω\n\n"
            "–í–∞—à–∞ –ø–æ—Ç–æ—á–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —É –≤–∫–ª–∞–¥—Ü—ñ üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞."
        )
        keyboard = [[InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data='back_main')]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.edit_message_text(help_text, parse_mode=ParseMode.HTML, reply_markup=reply_markup)


    async def back_to_main(self, query: Update):
        """–ü–æ–≤–µ—Ä—Ç–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é."""
        user = query.from_user
        welcome_message = (
            f"–ü—Ä–∏–≤—ñ—Ç, {user.first_name}! üëã\n\n"
            "–Ø - <b>Perky Coffee Jump Bot</b>! ü§ñ‚òï\n\n"
            "–ì–æ—Ç–æ–≤–∏–π –¥–æ –≥—Ä–∏? –ü—Ä–æ—Å—Ç–æ –Ω–∞—Ç–∏—Å–Ω–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ! üëá"
        )
        
        keyboard = [
            [InlineKeyboardButton("üéÆ –ü–æ—á–∞—Ç–∏ –≥—Ä—É", web_app=WebAppInfo(url=f"{WEBAPP_URL}/game"))],
            [
                InlineKeyboardButton("‚òï –ú–µ–Ω—é –∫–∞–≤'—è—Ä–Ω—ñ", url=CAFE_MENU_URL),
            ],
            [
                InlineKeyboardButton("üõí –ú–∞–≥–∞–∑–∏–Ω", callback_data='shop'),
                InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data='stats'),
            ],
            [
                InlineKeyboardButton("üèÜ –†–µ–π—Ç–∏–Ω–≥", callback_data='leaderboard'),
                InlineKeyboardButton("‚ùì –ü—Ä–∞–≤–∏–ª–∞", callback_data='help')
            ]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.edit_message_text(welcome_message, parse_mode=ParseMode.HTML, reply_markup=reply_markup)

# –°—Ç–≤–æ—Ä—é—î–º–æ —î–¥–∏–Ω–∏–π –µ–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
perky_bot = PerkyCoffeeBot()

async def setup_bot_handlers():
    """–°—Ç–≤–æ—Ä—é—î —Ç–∞ –Ω–∞–ª–∞—à—Ç–æ–≤—É—î –¥–æ–¥–∞—Ç–æ–∫ –±–æ—Ç–∞."""
    logger.info("–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –¥–æ–¥–∞—Ç–∫—É Telegram-–±–æ—Ç–∞...")
    application = Application.builder().token(BOT_TOKEN).build()
    
    # –†–µ—î—Å—Ç—Ä—É—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏
    application.add_handler(CommandHandler("start", perky_bot.start))
    application.add_handler(CallbackQueryHandler(perky_bot.button_callback))
    
    perky_bot.application = application
    logger.info("–û–±—Ä–æ–±–Ω–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –¥–æ–¥–∞–Ω–æ.")
