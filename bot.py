import logging
import asyncio
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes
from telegram.constants import ParseMode
from telegram.error import RetryAfter

# –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é —Ç–∞ –±–∞–∑—É –¥–∞–Ω–∏—Ö
from config import BOT_TOKEN, GAME_URL, WEBHOOK_URL
from database import db

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥–µ—Ä–∞
logger = logging.getLogger(__name__)

class PerkyCoffeeBot:
    """–ö–ª–∞—Å, —â–æ —ñ–Ω–∫–∞–ø—Å—É–ª—é—î –≤—Å—é –ª–æ–≥—ñ–∫—É Telegram-–±–æ—Ç–∞."""
    
    def __init__(self):
        # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –æ—Å–Ω–æ–≤–Ω—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ —è–∫ None
        self.application: Application = None
        self.webhook_url: str = WEBHOOK_URL

    async def initialize(self):
        """–°—Ç–≤–æ—Ä—é—î –µ–∫–∑–µ–º–ø–ª—è—Ä Application —Ç–∞ –Ω–∞–ª–∞—à—Ç–æ–≤—É—î –π–æ–≥–æ."""
        logger.info("–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –¥–æ–¥–∞—Ç–∫—É Telegram-–±–æ—Ç–∞...")
        self.application = Application.builder().token(BOT_TOKEN).build()

        # –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –∫–æ–º–∞–Ω–¥ —Ç–∞ –∫–Ω–æ–ø–æ–∫
        self.application.add_handler(CommandHandler("start", self.start))
        self.application.add_handler(CallbackQueryHandler(self.button_callback))
        logger.info("–û–±—Ä–æ–±–Ω–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –¥–æ–¥–∞–Ω–æ.")

    async def start(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start."""
        user = update.effective_user
        logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user.id} ({user.username}) –∑–∞–ø—É—Å—Ç–∏–≤ –±–æ—Ç–∞.")
        
        # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ –ë–î
        db.save_user(user.id, user.username, user.first_name)
        
        welcome_message = f"""
ü§ñ‚òï **–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ Perky Coffee Jump!**

–ü—Ä–∏–≤—ñ—Ç, {user.first_name}! üëã

–¶–µ –∑–∞—Ö–æ–ø–ª—é—é—á–∞ –≥—Ä–∞, –¥–µ —Ç–∏ –≥—Ä–∞—î—à –∑–∞ –∫–∞–≤–æ–≤–æ–≥–æ —Ä–æ–±–æ—Ç–∞ Perky, —Å—Ç—Ä–∏–±–∞—é—á–∏ –≤—Å–µ –≤–∏—â–µ —ñ –≤–∏—â–µ, –∑–±–∏—Ä–∞—é—á–∏ –∫–∞–≤–æ–≤—ñ –∑–µ—Ä–Ω–∞!

–û–±–µ—Ä–∏ –¥—ñ—é –≤ –º–µ–Ω—é –Ω–∏–∂—á–µ, —â–æ–± –ø–æ—á–∞—Ç–∏.
        """
        
        keyboard = [
            [InlineKeyboardButton("üéÆ –ü–æ—á–∞—Ç–∏ –≥—Ä—É", web_app=WebAppInfo(url=GAME_URL))],
            [InlineKeyboardButton("üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data='stats')],
            [InlineKeyboardButton("üèÜ –¢–∞–±–ª–∏—Ü—è –ª—ñ–¥–µ—Ä—ñ–≤", callback_data='leaderboard')],
            [InlineKeyboardButton("üõí –ú–∞–≥–∞–∑–∏–Ω", callback_data='shop')],
            [InlineKeyboardButton("‚ùì –î–æ–ø–æ–º–æ–≥–∞", callback_data='help')]
        ]
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_text(
            welcome_message,
            reply_markup=reply_markup,
            parse_mode=ParseMode.MARKDOWN
        )
    
    async def button_callback(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–æ–±–Ω–∏–∫ –Ω–∞—Ç–∏—Å–∫–∞–Ω—å –Ω–∞ inline-–∫–Ω–æ–ø–∫–∏."""
        query = update.callback_query
        await query.answer()
        
        action = query.data
        user_id = query.from_user.id
        
        logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user_id} –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É: {action}")

        if action == 'stats':
            await self.show_stats(query)
        elif action == 'leaderboard':
            await self.show_leaderboard(query)
        elif action == 'shop':
            await self.show_shop(query)
        elif action == 'help':
            await self.show_help(query)
        elif action == 'back_main':
            await self.back_to_main_menu(query)

    async def show_stats(self, query: Update):
        """–ü–æ–∫–∞–∑—É—î –æ—Å–æ–±–∏—Å—Ç—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≥—Ä–∞–≤—Ü—è."""
        user_stats = db.get_user_stats(query.from_user.id)
        
        if not user_stats or user_stats['games_played'] == 0:
            stats_text = "üìä **–¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞**\n\n–¢–∏ —â–µ –Ω–µ –∑—ñ–≥—Ä–∞–≤ –∂–æ–¥–Ω–æ—ó –≥—Ä–∏. –ß–∞—Å —Ü–µ –≤–∏–ø—Ä–∞–≤–∏—Ç–∏!"
        else:
            stats_text = f"""
üìä **–¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞**

üèÜ **–ù–∞–π–∫—Ä–∞—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:** {user_stats['high_score']} –º
‚òïÔ∏è **–ó—ñ–±—Ä–∞–Ω–æ –∑–µ—Ä–µ–Ω (–≤—Å—å–æ–≥–æ):** {user_stats['total_beans']}
üéÆ **–ó—ñ–≥—Ä–∞–Ω–æ —ñ–≥–æ—Ä:** {user_stats['games_played']}
        """
        
        keyboard = [
            [InlineKeyboardButton("üèÜ –ó–∞–≥–∞–ª—å–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥", callback_data='leaderboard')],
            [InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data='back_main')]
        ]
        
        await query.edit_message_text(
            stats_text,
            reply_markup=InlineKeyboardMarkup(keyboard),
            parse_mode=ParseMode.MARKDOWN
        )

    async def show_leaderboard(self, query: Update):
        """–ü–æ–∫–∞–∑—É—î —Ç–∞–±–ª–∏—Ü—é –ª—ñ–¥–µ—Ä—ñ–≤."""
        leaderboard_data = db.get_leaderboard(10)
        
        if not leaderboard_data:
            leaderboard_text = "üèÜ **–¢–∞–±–ª–∏—Ü—è –ª—ñ–¥–µ—Ä—ñ–≤**\n\n–ü–æ–∫–∏ —â–æ –Ω—ñ—Ö—Ç–æ –Ω–µ –≥—Ä–∞–≤. –°—Ç–∞–Ω—å –ø–µ—Ä—à–∏–º!"
        else:
            leaderboard_text = "üèÜ **–¢–æ–ø-10 –≥—Ä–∞–≤—Ü—ñ–≤:**\n\n"
            medals = ["ü•á", "ü•à", "ü•â"]
            for i, user in enumerate(leaderboard_data):
                place = medals[i] if i < 3 else f"{i + 1}."
                username = user['username'] or "–ì—Ä–∞–≤–µ—Ü—å"
                leaderboard_text += f"{place} {username} - **{user['high_score']} –º**\n"
        
        keyboard = [[InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data='back_main')]]
        
        await query.edit_message_text(
            leaderboard_text,
            reply_markup=InlineKeyboardMarkup(keyboard),
            parse_mode=ParseMode.MARKDOWN
        )

    async def show_shop(self, query: Update):
        """–ü–æ–∫–∞–∑—É—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –º–∞–≥–∞–∑–∏–Ω."""
        shop_text = """
üõí **–ú–∞–≥–∞–∑–∏–Ω Perky**

–¢—É—Ç —Å–∫–æ—Ä–æ –∑'—è–≤–∏—Ç—å—Å—è –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –∫—É–ø—É–≤–∞—Ç–∏ —É–Ω—ñ–∫–∞–ª—å–Ω—ñ —Å–∫—ñ–Ω–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∞ Perky —Ç–∞ —ñ–Ω—à—ñ –±–æ–Ω—É—Å–∏ –∑–∞ –∑—ñ–±—Ä–∞–Ω—ñ –∫–∞–≤–æ–≤—ñ –∑–µ—Ä–Ω–∞!

–°–ª—ñ–¥–∫—É–π—Ç–µ –∑–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º–∏! ‚ú®
        """
        keyboard = [[InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data='back_main')]]
        await query.edit_message_text(
            shop_text,
            reply_markup=InlineKeyboardMarkup(keyboard),
            parse_mode=ParseMode.MARKDOWN
        )
        
    async def show_help(self, query: Update):
        """–ü–æ–∫–∞–∑—É—î –¥–æ–≤—ñ–¥–∫–æ–≤—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é."""
        help_text = """
‚ùì **–î–æ–ø–æ–º–æ–≥–∞**

**–ú–µ—Ç–∞ –≥—Ä–∏:** –°—Ç—Ä–∏–±–∞–π —è–∫–æ–º–æ–≥–∞ –≤–∏—â–µ, –∑–±–∏—Ä–∞–π –∫–∞–≤–æ–≤—ñ –∑–µ—Ä–Ω–∞ ‚òïÔ∏è —ñ –Ω–µ –ø–∞–¥–∞–π!

**–ö–µ—Ä—É–≤–∞–Ω–Ω—è:**
- **–ö–Ω–æ–ø–∫–∏:** –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Å—Ç—Ä—ñ–ª–∫–∏ –Ω–∞ –µ–∫—Ä–∞–Ω—ñ.
- **–ì—ñ—Ä–æ—Å–∫–æ–ø:** –ù–∞—Ö–∏–ª—è–π —Ç–µ–ª–µ—Ñ–æ–Ω, —â–æ–± –∫–µ—Ä—É–≤–∞—Ç–∏ —Ä–æ–±–æ—Ç–æ–º (–º–æ–∂–Ω–∞ —É–≤—ñ–º–∫–Ω—É—Ç–∏ –≤ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è—Ö –≥—Ä–∏).

**–¢–∏–ø–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º:**
- **–ö–æ—Ä–∏—á–Ω–µ–≤–∞:** –ó–≤–∏—á–∞–π–Ω–∞.
- **–ó–µ–ª–µ–Ω–∞:** –ë–∞—Ç—É—Ç, –ø—ñ–¥–∫–∏–¥–∞—î –≤–∏—â–µ.
- **–°—ñ—Ä–∞:** –õ–∞–º–∞—î—Ç—å—Å—è –ø—ñ—Å–ª—è –ø–µ—Ä—à–æ–≥–æ —Å—Ç—Ä–∏–±–∫–∞.

–£—Å–ø—ñ—Ö—ñ–≤ —É –≥—Ä—ñ! üöÄ
        """
        keyboard = [[InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data='back_main')]]
        await query.edit_message_text(
            help_text,
            reply_markup=InlineKeyboardMarkup(keyboard),
            parse_mode=ParseMode.MARKDOWN
        )

    async def back_to_main_menu(self, query: Update):
        """–ü–æ–≤–µ—Ä—Ç–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é."""
        user = query.from_user
        main_menu_text = f"ü§ñ‚òï **Perky Coffee Jump**\n\n–ü—Ä–∏–≤—ñ—Ç, {user.first_name}! –ß–∏–º –∑–∞–π–º–µ–º–æ—Å—è?"
        
        keyboard = [
            [InlineKeyboardButton("üéÆ –ü–æ—á–∞—Ç–∏ –≥—Ä—É", web_app=WebAppInfo(url=GAME_URL))],
            [InlineKeyboardButton("üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data='stats')],
            [InlineKeyboardButton("üèÜ –¢–∞–±–ª–∏—Ü—è –ª—ñ–¥–µ—Ä—ñ–≤", callback_data='leaderboard')],
            [InlineKeyboardButton("üõí –ú–∞–≥–∞–∑–∏–Ω", callback_data='shop')],
            [InlineKeyboardButton("‚ùì –î–æ–ø–æ–º–æ–≥–∞", callback_data='help')]
        ]
        
        await query.edit_message_text(
            main_menu_text,
            reply_markup=InlineKeyboardMarkup(keyboard),
            parse_mode=ParseMode.MARKDOWN
        )

# –°—Ç–≤–æ—Ä—é—î–º–æ —î–¥–∏–Ω–∏–π –µ–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—É –¥–ª—è –≤—Å—å–æ–≥–æ –¥–æ–¥–∞—Ç–∫—É
perky_bot = PerkyCoffeeBot()

async def setup_bot_handlers():
    """
    –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î –¥–æ–¥–∞—Ç–æ–∫ –±–æ—Ç–∞ —Ç–∞ –Ω–∞–ª–∞—à—Ç–æ–≤—É—î –æ–±—Ä–æ–±–Ω–∏–∫–∏.
    –¶—è —Ñ—É–Ω–∫—Ü—ñ—è —Ç–µ–ø–µ—Ä –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç—ñ —Å–µ—Ä–≤–µ—Ä–∞.
    """
    await perky_bot.initialize()
